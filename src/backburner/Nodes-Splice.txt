{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red79\green123\blue61;\red23\green23\blue23;
\red202\green202\blue202;\red183\green111\blue179;\red70\green137\blue204;\red140\green211\blue254;\red67\green192\blue160;
\red212\green214\blue154;\red167\green197\blue152;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c37647\c54510\c30588;\cssrgb\c11765\c11765\c11765;
\cssrgb\c83137\c83137\c83137;\cssrgb\c77255\c52549\c75294;\cssrgb\c33725\c61176\c83922;\cssrgb\c61176\c86275\c99608;\cssrgb\c30588\c78824\c69020;
\cssrgb\c86275\c86275\c66667;\cssrgb\c70980\c80784\c65882;}
\margl1440\margr1440\vieww12600\viewh10200\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs34 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 document.querySelector('svg').querySelectorAll('[data-value="fascination"]')\
\
\
\pard\pardeftab720\sl360\partightenfactor0

\f1\fs24 \cf3 \cb4 \strokec3 // Write a Fn to slice the array\cf5 \cb1 \strokec5 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb4         \cf3 \strokec3 /*\cf5 \cb1 \strokec5 \
\pard\pardeftab720\sl360\partightenfactor0
\cf3 \cb4 \strokec3         Array.prototype.clone = function() \{\cf5 \cb1 \strokec5 \
\cf3 \cb4 \strokec3         \'a0\'a0return this.slice(0);\cf5 \cb1 \strokec5 \
\cf3 \cb4 \strokec3         \};\cf5 \cb1 \strokec5 \
\cf3 \cb4 \strokec3         */\cf5 \cb1 \strokec5 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb4 \strokec6 for\cf5 \strokec5  (\cf7 \strokec7 const\cf5 \strokec5  [\cf8 \strokec8 key\cf5 \strokec5 , \cf8 \strokec8 value\cf5 \strokec5 ] \cf7 \strokec7 of\cf5 \strokec5  \cf9 \strokec9 Object\cf5 \strokec5 .\cf10 \strokec10 entries\cf5 \strokec5 (\cf8 \strokec8 aggregates\cf5 \strokec5 ) ) \{\cb1 \
\cb4           \cb1 \
\cb4           \cf6 \strokec6 if\cf5 \strokec5  (\cf8 \strokec8 value\cf5 \strokec5  > \cf8 \strokec8 agg\cf5 \strokec5 [\cf8 \strokec8 key\cf5 \strokec5 ]) \{\cb1 \
\cb4             \cf8 \strokec8 index\cf5 \strokec5  += \cf8 \strokec8 agg\cf5 \strokec5 [\cf8 \strokec8 key\cf5 \strokec5 ];\cb1 \
\cb4             \cf8 \strokec8 diff\cf5 \strokec5  = \cf8 \strokec8 aggregates\cf5 \strokec5 [\cf8 \strokec8 key\cf5 \strokec5 ] - \cf8 \strokec8 agg\cf5 \strokec5 [\cf8 \strokec8 key\cf5 \strokec5 ];\cb1 \
\cb4             \cf3 \strokec3 //insertion = nodes.find("is"+key);\cf5 \cb1 \strokec5 \
\cb4             \cb1 \
\cb4             \cf6 \strokec6 for\cf5 \strokec5  (\cf7 \strokec7 let\cf5 \strokec5  \cf8 \strokec8 i\cf5 \strokec5 =\cf11 \strokec11 0\cf5 \strokec5 ; \cf8 \strokec8 i\cf5 \strokec5 <\cf8 \strokec8 diff\cf5 \strokec5 ; \cf8 \strokec8 i\cf5 \strokec5 ++)\{\cb1 \
\cb4               \cf9 \strokec9 console\cf5 \strokec5 .\cf10 \strokec10 log\cf5 \strokec5 (\cf8 \strokec8 diff\cf5 \strokec5 , \cf8 \strokec8 key\cf5 \strokec5 )\cb1 \
\cb4               \cf8 \strokec8 nodes\cf5 \strokec5 .\cf10 \strokec10 splice\cf5 \strokec5 (\cf8 \strokec8 inPt\cf5 \strokec5 , \cf11 \strokec11 0\cf5 \strokec5 , \{\cb1 \
\cb4                 \cf8 \strokec8 index:\cf5 \strokec5  \cf8 \strokec8 i\cf5 \strokec5 , \cb1 \
\cb4                 \cf8 \strokec8 sentiment:key\cf5 \strokec5  \cb1 \
\cb4               \});\cb1 \
\cb4               \cf8 \strokec8 inPt\cf5 \strokec5 ++;\cb1 \
\cb4             \}\cb1 \
\cb4           \}\cb1 \
\
\cb4         \}\cb1 \
}